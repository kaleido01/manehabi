const { gql } = require("apollo-server");



module.exports=gql`
type User{
  _id:ID
  username:String!
	email: String!
	password:String!
  imageUrl:String
	joinDate:String
	favorites:[Habit]
	Habits: [Habit]
}

type Habit{
  _id:ID,
  title:String!
  description:String!
  createdAt:String,
  startDate:String,
  limitDate:String,
  recode:[HabitRecode]
  countDate:Int,
  numberOfFailure:Int,
  creator:User
  starUser:[User]
}

type HabitRecode{
  _id:ID,
  date:String,
  total:Int,
  totay:Int,
}

type Token{
  token:String!
}

type pageInfo{
  startCursor:Int
  endCursor:Int
  hasNextPage:Boolean
}

type HabitAndPageInfo{
  pageInfo:pageInfo
  habits:[Habit]
}

type Query{
  getCurrentUser:User
  getAllHabits(offset:Int,limit:Int):HabitAndPageInfo
  getUserHabits(offset:Int,limit:Int):HabitAndPageInfo
  getHabit(_id:ID!):Habit
  getHabitData(_id:ID!,type:String!):[HabitRecode]
}



type Mutation{
  createHabit(title:String!,description:String!):Habit
  deleteHabit(_id:ID!):Habit
  createUser(username:String!,email:String!,password:String!):Token
  starHabit(_id:ID!):Habit
  unStarHabit(_id:ID!):Habit
  updateRecode(_id:ID!,today:Int!):HabitRecode
  login(email:String!,password:String!):Token

}

`